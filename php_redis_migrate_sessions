#!/bin/bash

#---
## @Synopsis Migrate php sessions from disk to redis using mass insertion
## @Copyright Copyleft 2013 renasboy <renasboy@gmail.com>
## @License GPL v3
## 
## Reads session stored in $php_session_dir and transfer the contents to
## redis database using redis-cli pipe mode and redis mass insertion protocol.
## Sessions are stored with the $php_session_prefix as prefix.
## This script calls itself providing the session file location
##
##
#---

# this is the php session prefix inside redis
: ${php_session_prefix:=PHPREDIS_SESSION}
: ${VERBOSE:=}
: ${DRYRUN:=}

# function to generate the data file with redis protocol for
# for mass insertion http://redis.io/topics/mass-insert
session_2_redis_pipe() {
    # generate the session id cause we need to get the length of it
    session_id=$php_session_prefix:$(basename ${1/sess_/})
    echo -n -e "*3\r\n\$3\r\nSET\r\n\$${#session_id}\r\n$session_id\r\n\$$(stat -c"%s" $1)\r\n"
    #sed 's/\\/\\\\/g' $1
    cat "$1"
    echo -n -e "\r\n"
}

# Directory found, assume it's where the sessions are stored.
set -o pipefail
errors=0

find "$1" -type f \! -size 0 |
  while read sessfile ; do
    [[ $VERBOSE ]] && echo -n "Processing ${sessfile##*/}..." ${DRYRUN:+(dry-run)...}
    if [[ $DRYRUN ]]; then
      echo
      session_2_redis_pipe "$sessfile"
    else
      session_2_redis_pipe "$sessfile" | redis-cli --pipe &>/dev/null
    fi
    if [[ $? != 0 ]]; then
        errors=1
        if [[ $VERBOSE ]] ;
          then echo "Failed";
          else echo >&2  "Failed to process $1"
        fi
    fi
    [[ $VERBOSE ]] && echo "Success!" ${DRYRUN:+(dry-run)...}
done
exit $errors
